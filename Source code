import zipfile
import pandas as pd
import os

# Define the path to the uploaded ZIP file
zip_path = "test.csv"
extract_dir = "/mnt/data/extracted"

# Check if the ZIP file exists
if not os.path.exists(zip_path):
    print(f"Error: ZIP file not found at {zip_path}")
    # You might want to exit or handle this error appropriately
else:
    # Create the extraction directory if it doesn't exist
    os.makedirs(extract_dir, exist_ok=True)

    # Extract the ZIP file
    try:
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(extract_dir)
        print(f"Successfully extracted ZIP file to {extract_dir}")

        # List extracted files
        extracted_files = os.listdir(extract_dir)

        # Attempt to read the first CSV file found
        csv_file_path = None
        for file in extracted_files:
            if file.endswith(".csv"):
                csv_file_path = os.path.join(extract_dir, file)
                break

        # Load the CSV file into a DataFrame
        if csv_file_path and os.path.exists(csv_file_path):
            df = pd.read_csv(csv_file_path)
            display(df.head()) # Use display() for better notebook output
        elif not extracted_files:
             print("Extraction directory is empty.")
        elif not csv_file_path:
            print("No CSV file found in the extracted directory.")
        else:
            print(f"Error: CSV file not found after extraction at {csv_file_path}")

    except zipfile.BadZipFile:
        print(f"Error: The file {zip_path} is not a valid ZIP file.")
    except Exception as e:
        print(f"An unexpected error occurred during ZIP processing: {e}")
